// 2025-04-12 03:58:18
#event properties (no comments/etc. here are saved)
parent_index = -1;
sprite_index = sprPix;
persistent = true;
uses_physics = false;

#event create Init

// Basics
draw = F
par = N
flick = F
flickPct = random_range(0.9,1.1)
pct = random(1)
rot = random(360)
scl = N
nova = random_range(1/3,2/3)
isChild = F
isNova = N
isGalaxy = N
isStar = N
if(chance(1)) flick = T;
sprHFlip = F
if(pct >= .99 and chance(50)) pick_star_asset();
else if(pct >= 1/3 and pct <= 2/3 and chance(2)) pick_nova_asset();
else if(pct <= .1 and chance(1/3)) pick_galaxy_asset();
vmlt = random_range(2,4)
deptho = depth

#event destroy Spawn/Respawn

if(par != N and instance_exists(par)) {
    
    // Remove Galaxy from Parent's List
    if(isGalaxy) {
        
        for(var i = 0; i < ds_list_size(par.galL); i++) {
            
            if(par.galL[|i] == id) ds_list_delete(par.galL,i);
            
        }
        
    }
    
    // Remove Nova from Parent's List
    if(isNova) {
        
        for(var i = 0; i < ds_list_size(par.novL); i++) {
            
            if(par.novL[|i] == id) ds_list_delete(par.novL,i);
            
        }
        
    }
    
    var _rep = 1
    var _aw = abs(sprite_width)
    var _ah = abs(sprite_height)
    if(instance_number(oStar) < par.cnt) _rep = 2;
    
    if(x < -_aw and (par.dir >= 90 or par.dir <= 270)) {
        
        repeat(_rep) {
            
            var inst = instance_create_layer(WW+_aw,random(WH),"MG",oStar)
            inst.par = par
            
        }
        
    } else if(x > WW+_aw and (par.dir <= 90 or par.dir >= 270)) {
        
        repeat(_rep) {
            
            var inst = instance_create_layer(-_aw,random(WH),"MG",oStar)
            inst.par = par
            
        }
        
    }
    
    if(y < -_ah and (par.dir >= 0 and par.dir <= 180)) {
        
        repeat(_rep) {
            
            var inst = instance_create_layer(random(WW),WH+_ah,"MG",oStar)
            inst.par = par
            
        }
        
    } else if(y > WH+_ah and (par.dir >= 180 and par.dir <= 360)) {
        
        repeat(_rep) {
            
            var inst = instance_create_layer(random(WW),-_ah,"MG",oStar)
            inst.par = par
            
        }
        
    }
    
}

#event step Insert description here
// You can write your code in this editor


#event step_begin Position Updates

// Rotation
image_angle = rot

// Alpha/Flicker
if(flick) {
    
    if(par != N and instance_exists(par)) image_alpha = (lerp(.4,1,pct)*random(flickPct))*par.pct;
    else image_alpha = (lerp(.4,1,pct)*random(flickPct));
    
} else {
    
    if(par != N and instance_exists(par)) {
        
        image_alpha = (lerp(.4,1,pct))*par.pct;
        if(isGalaxy or isNova) image_alpha = nova*par.pct;
        
    } else {
        
        image_alpha = lerp(.4,1,pct);
        if(isGalaxy or isNova) image_alpha = nova;
        
    }
    
}

// Scale
if(scl == N) {
    
    // Track or Destroy Nova (Full?)
    if(isNova and is(par) and ds_list_size(par.novL) < 4) {
        
        ds_list_add(par.novL,id)
        isChild = T
        
    } else if(isNova and is(par)) instance_destroy(id,F);
    
    // Track or Destroy Galaxy (Full?)
    if(isGalaxy and is(par) and ds_list_size(par.galL) < 7) {
        
        ds_list_add(par.galL,id)
        isChild = T
        
    } 
    else if(isGalaxy and is(par)) instance_destroy(id,F);
    
    if(isStar) scl = random_range(((WH*.025)/sprite_get_height(sprite_index))*2/3,((WH*.025)/sprite_get_height(sprite_index))*(1+(1/3)));
    else if(isNova) scl = random_range(((WW)/sprite_get_width(sprite_index))*(2/3),((WW)/sprite_get_width(sprite_index))*2);
    else if(isGalaxy) scl = random_range(((WW*0.05)/sprite_get_width(sprite_index)),((WW*0.2)/sprite_get_width(sprite_index))*(1+(1/3)));
    else scl = max(1,4*pct);
    image_xscale = scl
    if(sprHFlip) image_xscale*=-1;
    image_yscale = scl
    var _pad = max(abs(sprite_width),abs(sprite_height))
    if(x > WW) x = WW+_pad;
    else if(x < 0) x = -_pad;
    if(y > WH) y = WH+_pad;
    else if(y < 0) y = -_pad;
    
} else {
    
    image_xscale = scl
    if(sprHFlip) image_xscale*=-1;
    image_yscale = scl
    
}

draw

// Velocity
if(par != N and instance_exists(par)) {
    
    // Set Child Flag
    isChild = T
    
    var _vel = par.vel
    if(isStar) _vel*=vmlt;
    if(sprite_index == sprPlanetTheiaGas) _vel*=6+vmlt;
    if(sprite_index == sprPlanetTheia) _vel*=10+vmlt;
    if(isGalaxy) _vel*=(scl*1.5);
    depth = lerp(deptho+100,deptho+1,(_vel*pct)/par.velTgt);
    
    // Position Iterate
    if(draw and sprite_index != sprPlanetGothicaBR) {
        
        x += ( cos(degtorad(par.dir))*_vel)*pct
        y += (-sin(degtorad(par.dir))*_vel)*pct
        
    }
    
    // Respawn?
    var _res = (par.cnt > instance_number(oStar) and sprite_index == sprPix)
    var _pad = max(abs(sprite_width),abs(sprite_height))
    if(x < -_pad and (par.dir >= 90 or par.dir <= 270)) instance_destroy(id,_res or isGalaxy or isNova);
    else if(x > WW+_pad and (par.dir <= 90 or par.dir >= 270)) instance_destroy(id,_res or isGalaxy or isNova);
    if(y < -_pad and (par.dir >= 0 and par.dir <= 180)) instance_destroy(id,_res or isGalaxy or isNova);
    else if(y > WH+_pad and (par.dir >= 180 and par.dir <= 360)) instance_destroy(id,_res or isGalaxy or isNova);
    
} else if(isChild) instance_destroy(id,F); // Destroy cause the parent is gone now

#event step_end Insert description here
// You can write your code in this editor


#event draw Insert description here
// You can write your code in this editor


#event draw_begin Insert description here
// You can write your code in this editor


#event draw_gui_end Draw
if(draw) {
    
    if(isStar or isNova or isGalaxy) shader_set(shDiscardBlk);
    draw_self()
    shader_reset()
    
}

#event draw_pre Unused


#event draw_post Insert description here
// You can write your code in this editor
